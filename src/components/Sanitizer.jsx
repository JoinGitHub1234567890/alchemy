import React, { Component } from 'react'
import { NativeTypes } from 'react-dnd-html5-backend'
import { DropTarget } from 'react-dnd'

import { convert } from '../api'

const uniqueFiles = (files, newArray) =>
  newArray.reduce((accum, next) => {
    if (accum[next.path]) return accum
    return Object.assign(accum, {
      [next.path]: next
    })
  }, files)

const drop = (props, monitor, component) => {
  const { files } = monitor.getItem()
  component.setState({
    status: 'IDLE',
    files: uniqueFiles(component.state.files, files)
  })
}

const convertFiles = (props, monitor, component) => {
  const { files } = monitor.getItem()
  const filtered = files.filter(file => file.type.includes('image'))

  if (filtered.length) {
    const [ref] = filtered

    // where to place output file
    const outputPath = ref.path.slice(0, ref.path.length - ref.name.length)

    component.setState({
      status: 'CONVERTING'
    })

    convert({
      files: filtered.map(f => f.path),
      outputPath
    }).then((fileName) => {
      component.setState({
        status: 'DONE',
        fileName
      })
      setTimeout(() => {
        component.setState({
          status: 'IDLE'
        })
      }, 3000)
    }).catch((err) => {
      alert(`ERR: ${err}`)
      component.setState({
        status: 'FAILED'
      })
      setTimeout(() => {
        component.setState({
          status: 'IDLE'
        })
      }, 3000)
    })
  } else component.setState({ status: 'IDLE' })
}

class Sanitizer extends Component {
  constructor(props) {
    super(props)

    this.state = {
      status: 'IDLE',
      files: {}
    }

    this.isHover = this.isHover.bind(this)
    this.getIconObject = this.getIconObject.bind(this)
    this.getMessage = this.getMessage.bind(this)
  }

  getMessage() {
    switch (this.state.status) {
      case 'IDLE': {
        if (!Object.keys(this.state.files).length) {
          return (
            <div>
              <h1>
                { this.isHover() ? 'Drop' : 'Drag & drop' }
              </h1>
              <p className="detail">your files here to convert</p>
            </div>
          )
        }
        return null
      }
      case 'CONVERTING': return (
        <div>
          <h1>
            Converting
          </h1>
          <p className="detail">(this should only take a sec)</p>
        </div>
      )
      case 'DONE': return (
        <div>
          <h1>
            Complete!
          </h1>
          <p className="detail">{`${this.state.fileName || 'File'} created`}</p>
        </div>
      )
      case 'FAILED': return (
        <div>
          <h1>
            Conversion failed
          </h1>
          <p className="detail">Uh oh, something went wrong ðŸ˜•</p>
        </div>
      )
      default: return null
    }
  }

  getIconObject() {
    switch (this.state.status) {
      case 'FAILED': return (
        <svg width="59" height="78" viewBox="0 0 59 78" xmlns="http://www.w3.org/2000/svg">
          <g fill="none" fillRule="evenodd">
            <g fill="#F0F0EC">
              <path d="M1.5 3.004V74.22c0 .832.672 1.503 1.507 1.503h52.986c.836 0 1.507-.668 1.507-1.49V17.991c0-.438-.318-1.22-.627-1.538L42.953 2.127c-.303-.312-1.049-.627-1.479-.627H3.005c-.838 0-1.505.668-1.505 1.504zm-1.5 0A2.997 2.997 0 0 1 3.005 0h38.469c.83 0 1.967.476 2.556 1.082l13.919 14.327c.58.597 1.051 1.754 1.051 2.583v56.241a2.997 2.997 0 0 1-3.007 2.991H3.007A3.002 3.002 0 0 1 0 74.221V3.004z" />
              <path d="M41.478 1.493v.005-.005zM3.005 1.5c-.838 0-1.505.668-1.505 1.504V74.22c0 .832.672 1.503 1.507 1.503h52.986c.836 0 1.507-.668 1.507-1.49V17.991l-12.525-.001a3.502 3.502 0 0 1-3.497-3.506V1.498c0 .002-38.473.002-38.473.002zM0 3.004A2.997 2.997 0 0 1 3.005 0h38.469c.83 0 1.504.667 1.504 1.493v12.992c0 1.108.896 2.006 1.997 2.006h12.518c.832 0 1.507.672 1.507 1.501v56.241a2.997 2.997 0 0 1-3.007 2.991H3.007A3.002 3.002 0 0 1 0 74.221V3.004z" />
            </g>
            <g fill="#F84B45">
              <path d="M37.632 31.747L19.247 50.132l2.121 2.121 18.385-18.385z" />
              <path d="M19.247 33.868l18.385 18.385 2.121-2.121-18.385-18.385z" />
            </g>
          </g>
        </svg>
      )
      case 'DONE': return (
        <svg xmlns="http://www.w3.org/2000/svg" width="118" height="118" viewBox="0 0 118 118">
          <g fill="none" fillRule="evenodd" transform="translate(-17 -35)">
            <g transform="rotate(54 44.657 89.158)">
              <ellipse cx="49.387" cy="31.17" fill="#F58D24" transform="rotate(178 49.387 31.17)" rx="8.442" ry="8.432" />
              <ellipse cx="3.951" cy="72.126" fill="#F58D24" opacity=".714" transform="rotate(178 3.95 72.126)" rx="3.015" ry="3.011" />
              <path fill="#F8312A" fillRule="nonzero" d="M24.9277655,78.6243604 C24.305182,78.8509623 23.9838647,79.5389749 24.2103351,80.1611972 C24.4368055,80.7834195 25.1251948,81.103929 25.7477783,80.8773271 C26.3703619,80.6507252 26.6916792,79.9627126 26.4652088,79.3404903 C26.2387384,78.718268 25.5503491,78.3977585 24.9277655,78.6243604 Z M21.8762839,78.4927789 C21.2758191,78.2127776 20.5621151,78.4720704 20.2822762,79.0721867 C20.0024374,79.672303 20.2625677,80.3857022 20.8630325,80.6657035 C21.4634973,80.9457049 22.1772013,80.6864121 22.4570401,80.0862958 C22.736879,79.4861794 22.4767487,78.7727803 21.8762839,78.4927789 Z M19.8138287,76.2444427 C19.5872268,75.6218591 18.8992142,75.3005419 18.276992,75.5270123 C17.6547697,75.7534826 17.3342602,76.4418719 17.5608621,77.0644555 C17.787464,77.6870391 18.4754766,78.0083563 19.0976989,77.7818859 C19.7199211,77.5554156 20.0404306,76.8670263 19.8138287,76.2444427 Z M19.9485584,73.1963966 C20.2285597,72.5959318 19.9692669,71.8822278 19.3691506,71.602389 C18.7690343,71.3225502 18.0556351,71.5826804 17.7756338,72.1831452 C17.4956324,72.7836101 17.7549252,73.497314 18.3550415,73.7771529 C18.9551579,74.0569917 19.668557,73.7968614 19.9485584,73.1963966 Z M22.20155,71.1341447 C22.8241336,70.9075428 23.1454508,70.2195302 22.9189804,69.597308 C22.69251,68.9750857 22.0041208,68.6545762 21.3815372,68.8811781 C20.7589536,69.10778 20.4376364,69.7957926 20.6641067,70.4180149 C20.8905771,71.0402371 21.5789664,71.3607466 22.20155,71.1341447 Z M25.2530317,71.2657262 C25.8534965,71.5457276 26.5672005,71.2864348 26.8470393,70.6863185 C27.1268781,70.0862021 26.8667478,69.372803 26.266283,69.0928016 C25.6658182,68.8128003 24.9521142,69.0720931 24.6722754,69.6722094 C24.3924366,70.2723257 24.6525668,70.9857249 25.2530317,71.2657262 Z M28.8523236,74.2314929 C29.4745458,74.0050225 29.7950553,73.3166332 29.5684534,72.6940497 C29.3418515,72.0714661 28.6538389,71.7501488 28.0316167,71.9766192 C27.4093944,72.2030896 27.0888849,72.8914789 27.3154868,73.5140625 C27.5420887,74.136646 28.2301013,74.4579633 28.8523236,74.2314929 Z M27.1807572,76.5621085 C26.9007558,77.1625734 27.1600486,77.8762773 27.7601649,78.1561162 C28.3602812,78.435955 29.0736804,78.1758247 29.3536818,77.5753599 C29.6336831,76.9748951 29.3743903,76.2611911 28.774274,75.9813523 C28.1741577,75.7015135 27.4607585,75.9616437 27.1807572,76.5621085 Z" />
              <rect width="5.555" height="5.549" x="59.121" y="105.033" fill="#F58D24" transform="rotate(179 61.898 107.807)" />
              <rect width="7.374" height="7.365" x="18.819" y="98.305" fill="#80C772" transform="rotate(128 22.506 101.988)" />
              <path fill="#80C772" fillRule="nonzero" d="M100.310845,28.6199514 L97.6556087,36.7919294 L105.843885,39.4524618 L108.499122,31.2804838 L100.310845,28.6199514 Z M98.3847268,24.8397309 L112.279343,29.3543652 L107.770004,43.2326823 L93.8753882,38.718048 L98.3847268,24.8397309 Z" />
              <rect width="4.824" height="4.818" x="36.715" y="49.579" fill="#1D8CF8" transform="rotate(18 39.126 51.989)" />
              <path fill="#BA7CF8" fillRule="nonzero" d="M19.6355731,39.0036549 C16.412251,39.1162158 13.8912908,41.8164358 14.0036378,45.0336323 C14.1159848,48.2508288 16.8191618,50.768618 20.042484,50.6560571 C23.2658061,50.5434962 25.7867663,47.8432762 25.6744193,44.6260796 C25.5620723,41.4088831 22.8588952,38.891094 19.6355731,39.0036549 Z M19.5657741,37.0048732 C23.8924681,36.8537817 27.5222867,40.234662 27.6732009,44.5562807 C27.8241152,48.8778993 24.4389769,52.5037473 20.112283,52.6548387 C15.785589,52.8059302 12.1557704,49.42505 12.0048561,45.1034313 C11.8539419,40.7818127 15.2390802,37.1559647 19.5657741,37.0048732 Z" />
              <ellipse cx="92.434" cy="15.255" fill="#F8312A" transform="rotate(178 92.434 15.255)" rx="2.412" ry="2.409" />
              <path fill="#80C772" fillRule="nonzero" d="M47.0021783,3.63415988 C47.0698641,5.57242643 48.6976086,7.08853777 50.6375646,7.02079301 C52.5775206,6.95304826 54.0955414,5.32708437 54.0278556,3.38881782 C53.9601698,1.45055127 52.3324254,-0.0655600718 50.3924694,0.00218468466 C48.4525134,0.0699294411 46.9344926,1.69589333 47.0021783,3.63415988 Z M53.0284648,3.42371732 C53.0768669,4.8097728 51.9909352,5.97292273 50.6026651,6.02140219 C49.214395,6.06988165 48.0499713,4.98531586 48.0015691,3.59926038 C47.953167,2.2132049 49.0390988,1.05005497 50.4273689,1.00157551 C51.815639,0.953096051 52.9800627,2.03766183 53.0284648,3.42371732 Z" />
              <path fill="#BA7CF8" fillRule="nonzero" d="M73.5490123,21.2742528 L70.5237498,18.2525391 C70.1486943,17.8779235 69.5406091,17.8779235 69.1655536,18.2525391 C68.790498,18.6271547 68.790498,19.2345265 69.1655536,19.6091421 L72.190816,22.6308559 L69.1655536,25.6525697 C68.790498,26.0271852 68.790498,26.6345571 69.1655536,27.0091727 C69.5406091,27.3837883 70.1486943,27.3837883 70.5237498,27.0091727 L73.5490123,23.987459 L76.6764688,27.1112469 C77.0515244,27.4858625 77.6596095,27.4858625 78.0346651,27.1112469 C78.4097206,26.7366313 78.4097206,26.1292595 78.0346651,25.7546439 L74.9072085,22.6308559 L78.0346651,19.5070679 C78.4097206,19.1324523 78.4097206,18.5250804 78.0346651,18.1504649 C77.6596095,17.7758493 77.0515244,17.7758493 76.6764688,18.1504649 L73.5490123,21.2742528 Z" transform="rotate(-91 73.6 22.63)" />
              <path fill="#1D8CF8" fillRule="nonzero" d="M42.147174,95.5729696 L37.197382,90.6289838 C36.5837338,90.0160555 35.5888135,90.0160555 34.9751653,90.6289838 C34.3615171,91.2419122 34.3615171,92.2356655 34.9751653,92.8485939 L39.9249572,97.7925796 L34.9751653,102.736565 C34.3615171,103.349494 34.3615171,104.343247 34.9751653,104.956175 C35.5888135,105.569104 36.5837338,105.569104 37.197382,104.956175 L42.147174,100.01219 L47.2641711,105.123184 C47.8778193,105.736113 48.8727396,105.736113 49.4863878,105.123184 C50.100036,104.510256 50.100036,103.516503 49.4863878,102.903574 L44.3693907,97.7925796 L49.4863878,92.6815849 C50.100036,92.0686565 50.100036,91.0749032 49.4863878,90.4619748 C48.8727396,89.8490464 47.8778193,89.8490464 47.2641711,90.4619748 L42.147174,95.5729696 Z" transform="rotate(-77 42.23 97.793)" />
            </g>
            <g transform="translate(50 75)">
              <path fill="#FFFFFF" d="M0,3.00357636 C0,1.34474694 1.33338688,0 3.00507624,0 L41.473985,0 C42.3048554,0 43.440628,0.475756237 44.0296361,1.08201478 L57.9488619,15.408897 C58.5294387,16.0064772 59.0000891,17.1625868 59.0000891,17.9921907 L59.0000891,74.2330792 C59.0000891,75.8849929 57.6569356,77.2241336 55.9931524,77.2241336 L3.00693668,77.2241336 C1.34625141,77.2241336 0,75.8837641 0,74.2205572 L0,3.00357636 Z" />
              <path fill="#F0F0EC" fillRule="nonzero" d="M1.5,3.00357636 L1.5,74.2205572 C1.5,75.0531106 2.17245062,75.7241336 3.00693668,75.7241336 L55.9931524,75.7241336 C56.8289739,75.7241336 57.5000891,75.0560877 57.5000891,74.2330792 L57.5000891,17.9921907 C57.5000891,17.5536334 57.1820889,16.7722757 56.873006,16.4541405 L42.9537802,2.12725833 C42.6503535,1.81494506 41.9040335,1.5 41.473985,1.5 L3.00507624,1.5 C2.16673262,1.5 1.5,2.16824792 1.5,3.00357636 Z M0,3.00357636 C0,1.34474694 1.33338688,0 3.00507624,0 L41.473985,0 C42.3048554,0 43.440628,0.475756237 44.0296361,1.08201478 L57.9488619,15.408897 C58.5294387,16.0064772 59.0000891,17.1625868 59.0000891,17.9921907 L59.0000891,74.2330792 C59.0000891,75.8849929 57.6569356,77.2241336 55.9931524,77.2241336 L3.00693668,77.2241336 C1.34625141,77.2241336 0,75.8837641 0,74.2205572 L0,3.00357636 Z" />
              <path fill="#F0F0EC" fillRule="nonzero" d="M41.4784089,1.4925437 C41.4784089,1.4954652 41.4787156,1.49729644 41.4784089,1.49841264 L41.4784089,1.4925437 Z M3.00507624,1.5 C2.16673262,1.5 1.5,2.16824792 1.5,3.00357636 L1.5,74.2205572 C1.5,75.0531106 2.17245062,75.7241336 3.00693668,75.7241336 L55.9931524,75.7241336 C56.8289739,75.7241336 57.5000891,75.0560877 57.5000891,74.2330792 L57.5000891,17.9921907 C57.5000891,17.9925921 44.9751712,17.9909118 44.9751712,17.9909118 C43.0438182,17.9909118 41.4784089,16.4195047 41.4784089,14.485289 L41.4784089,1.49841264 C41.478073,1.49963524 3.00507624,1.5 3.00507624,1.5 Z M0,3.00357636 C0,1.34474694 1.33338688,0 3.00507624,0 L41.473985,0 C42.3048554,0 42.9784089,0.666887935 42.9784089,1.4925437 L42.9784089,14.485289 C42.9784089,15.5929639 43.8741347,16.4909118 44.9751712,16.4909118 L57.4928083,16.4909118 C58.3252565,16.4909118 59.0000891,17.1625868 59.0000891,17.9921907 L59.0000891,74.2330792 C59.0000891,75.8849929 57.6569356,77.2241336 55.9931524,77.2241336 L3.00693668,77.2241336 C1.34625141,77.2241336 0,75.8837641 0,74.2205572 L0,3.00357636 Z" />
              <polygon fill="#80C772" fillRule="nonzero" points="16.963 41.472 14.879 43.63 24.05 52.487 42.158 33.736 40 31.652 23.976 48.245" />
            </g>
          </g>
        </svg>
      )
      case 'CONVERTING': return (
        <svg width="182" height="86" viewBox="0 0 182 86" xmlns="http://www.w3.org/2000/svg">
          <g fill="none" fillRule="evenodd">
            <path className="converting-arrow" d="M104.636 35.016c-.938-.26-2-.519-3.17-.762-8.734-1.815-18.049-1.815-26.749 1.199l-.654-1.89c9.09-3.15 18.753-3.15 27.81-1.267 1.17.243 2.239.502 3.191.764l-4.346-6.885 1.668-1.037 6.291 9.97-10.432 5.485-.926-1.73 7.317-3.847z" fill="#B8B7B2" />
            <g fill="#F0F0EC">
              <path d="M128.018 2.679L114.43 72.588a1.502 1.502 0 0 0 1.192 1.763l52.013 10.11c.82.16 1.606-.368 1.763-1.176l10.732-55.207c.083-.431-.08-1.259-.322-1.63l-10.93-16.72c-.239-.364-.911-.816-1.333-.898l-37.762-7.34a1.497 1.497 0 0 0-1.765 1.189zm-1.472-.286a2.997 2.997 0 0 1 3.523-2.375l37.762 7.34c.816.159 1.84.842 2.302 1.55l10.93 16.72c.456.697.697 1.921.539 2.736L170.871 83.57a2.997 2.997 0 0 1-3.523 2.363l-52.012-10.11a3.002 3.002 0 0 1-2.379-3.523l13.589-69.908z" />
              <path d="M167.55 8.824v.006-.006zM129.784 1.49a1.497 1.497 0 0 0-1.765 1.189L114.43 72.588a1.502 1.502 0 0 0 1.192 1.763l52.013 10.11c.82.16 1.606-.368 1.763-1.176l10.732-55.207-12.295-2.392a3.502 3.502 0 0 1-2.764-4.108L167.55 8.83l-37.766-7.34zm-3.237.903a2.997 2.997 0 0 1 3.523-2.375l37.762 7.34c.816.159 1.35.942 1.192 1.752l-2.48 12.754a2.002 2.002 0 0 0 1.578 2.35l12.288 2.388a1.504 1.504 0 0 1 1.193 1.762L170.871 83.57a2.997 2.997 0 0 1-3.523 2.363l-52.012-10.11a3.002 3.002 0 0 1-2.379-3.523l13.589-69.908z" />
            </g>
            <path d="M137.087 53.394l18.496 3.596 3.57-18.368-18.496-3.595-3.57 18.367zm1.198-21.885l24.386 4.74-4.716 24.258-24.385-4.74 4.715-24.258z" fill="#F58D24" />
            <g>
              <g fill="#F0F0EC">
                <path d="M2.166 13.364l13.589 69.908a1.502 1.502 0 0 0 1.766 1.189l52.013-10.11a1.497 1.497 0 0 0 1.194-1.752L59.997 17.392c-.084-.43-.545-1.137-.909-1.39L42.691 4.594c-.358-.249-1.15-.416-1.573-.334L3.356 11.6c-.823.16-1.35.944-1.19 1.764zm-1.473.286a2.997 2.997 0 0 1 2.377-3.522l37.762-7.34c.816-.159 2.022.092 2.715.574L59.945 14.77c.684.476 1.366 1.521 1.524 2.335l10.732 55.208a2.997 2.997 0 0 1-2.381 3.51l-52.013 10.11a3.002 3.002 0 0 1-3.525-2.375L.693 13.65z" />
                <path d="M41.121 4.252l.002.006-.002-.006zM3.356 11.601c-.823.16-1.35.943-1.19 1.763l13.589 69.908a1.502 1.502 0 0 0 1.766 1.189l52.013-10.11a1.497 1.497 0 0 0 1.194-1.752L59.997 17.392 47.702 19.78a3.502 3.502 0 0 1-4.101-2.774L41.123 4.258 3.356 11.601zM.693 13.65a2.997 2.997 0 0 1 2.377-3.522l37.762-7.34a1.498 1.498 0 0 1 1.762 1.178l2.479 12.754a2.002 2.002 0 0 0 2.343 1.588l12.287-2.389a1.504 1.504 0 0 1 1.766 1.186l10.732 55.208a2.997 2.997 0 0 1-2.381 3.51l-52.013 10.11a3.002 3.002 0 0 1-3.525-2.375L.693 13.65z" />
              </g>
              <path d="M39.384 58.093c6.704-1.303 11.09-7.77 9.792-14.445-1.297-6.677-7.786-11.029-14.49-9.726-6.704 1.303-11.09 7.77-9.792 14.446s7.787 11.028 14.49 9.725zm-.572-2.945c-5.08.987-9.992-2.307-10.973-7.353-.981-5.046 2.339-9.94 7.42-10.928 5.08-.987 9.992 2.307 10.973 7.353.98 5.046-2.34 9.94-7.42 10.928z" fill="#B8E5FF" />
            </g>
          </g>
        </svg>
      )
      default:
        if (Object.keys(this.state.files).length) {
          return (
            <div
              className="file__list"
              style={{
                display: 'flex',
                flexDirection: 'column',
                justifyContent: 'flex-start',
                alignItems: 'stretch',
                width: '100%',
                height: '100%',
              }}
            >
              <button className="button__convert">CONVERT</button>
              {
                Object.keys(this.state.files).map(key =>
                  <p className="file__list-item" key={key}>{this.state.files[key].name}</p>
                )
              }
            </div>
          )
        }
        return (
          <svg width="215" height="110" viewBox="-22 -15 215 110" xmlns="http://www.w3.org/2000/svg">
            <g fill="none" fillRule="evenodd">
              <g className="file3">
                <g fill="#F0F0EC">
                  <path d="M112.018 3.679L98.43 73.588a1.502 1.502 0 0 0 1.192 1.763l52.013 10.11c.82.16 1.606-.368 1.763-1.176l10.732-55.207c.083-.431-.08-1.259-.322-1.63l-10.93-16.72c-.239-.364-.911-.816-1.333-.898l-37.762-7.34a1.497 1.497 0 0 0-1.765 1.189zm-1.472-.286a2.997 2.997 0 0 1 3.523-2.375l37.762 7.34c.816.159 1.84.842 2.302 1.55l10.93 16.72c.456.697.697 1.921.539 2.736L154.871 84.57a2.997 2.997 0 0 1-3.523 2.363l-52.012-10.11a3.002 3.002 0 0 1-2.379-3.523l13.589-69.908z" />
                  <path d="M113.783 2.49a1.497 1.497 0 0 0-1.765 1.189L98.43 73.588a1.502 1.502 0 0 0 1.192 1.763l52.013 10.11c.82.16 1.606-.368 1.763-1.176l10.732-55.207-12.295-2.392a3.502 3.502 0 0 1-2.764-4.108L151.55 9.83l-37.766-7.34zm-3.237.903a2.997 2.997 0 0 1 3.523-2.375l37.762 7.34c.816.159 1.35.942 1.192 1.752l-2.48 12.754a2.002 2.002 0 0 0 1.578 2.35l12.288 2.388a1.504 1.504 0 0 1 1.193 1.762L154.871 84.57a2.997 2.997 0 0 1-3.523 2.363l-52.012-10.11a3.002 3.002 0 0 1-2.379-3.523l13.589-69.908z" />
                </g>
                <path d="M142.528 58.562l-3.518 2.373.573-2.945 2.945.572zm-21.441-4.168l18.496 3.596 3.57-18.368-18.496-3.595-3.57 18.367zm1.198-21.885l24.386 4.74-4.716 24.258-24.385-4.74 4.715-24.258z" fill="#F58D24" />
              </g>
              <g className="file1">
                <g fill="#F0F0EC">
                  <path d="M2.166 14.364l13.589 69.908a1.502 1.502 0 0 0 1.766 1.189l52.013-10.11a1.497 1.497 0 0 0 1.194-1.752L59.997 18.392c-.084-.43-.545-1.137-.909-1.39L42.691 5.594c-.358-.249-1.15-.416-1.573-.334L3.356 12.6c-.823.16-1.35.944-1.19 1.764zm-1.473.286a2.997 2.997 0 0 1 2.377-3.522l37.762-7.34c.816-.159 2.022.092 2.715.574L59.945 15.77c.684.476 1.366 1.521 1.524 2.335l10.732 55.208a2.997 2.997 0 0 1-2.381 3.51l-52.013 10.11a3.002 3.002 0 0 1-3.525-2.375L.693 14.65z" />
                  <path d="M41.121 5.252l.002.006-.002-.006zM3.356 12.601c-.823.16-1.35.943-1.19 1.763l13.589 69.908a1.502 1.502 0 0 0 1.766 1.189l52.013-10.11a1.497 1.497 0 0 0 1.194-1.752L59.997 18.392 47.702 20.78a3.502 3.502 0 0 1-4.101-2.774L41.123 5.258 3.356 12.601zM.693 14.65a2.997 2.997 0 0 1 2.377-3.522l37.762-7.34a1.498 1.498 0 0 1 1.762 1.178l2.479 12.754a2.002 2.002 0 0 0 2.343 1.588l12.287-2.389a1.504 1.504 0 0 1 1.766 1.186l10.732 55.208a2.997 2.997 0 0 1-2.381 3.51l-52.013 10.11a3.002 3.002 0 0 1-3.525-2.375L.693 14.65z" />
                </g>
                <path d="M39.384 59.093c6.704-1.303 11.09-7.77 9.792-14.445-1.297-6.677-7.786-11.029-14.49-9.726-6.704 1.303-11.09 7.77-9.792 14.446s7.787 11.028 14.49 9.725zm-.572-2.945c-5.08.987-9.992-2.307-10.973-7.353-.981-5.046 2.339-9.94 7.42-10.928 5.08-.987 9.992 2.307 10.973 7.353.98 5.046-2.34 9.94-7.42 10.928z" fill="#B8E5FF" />
              </g>
              <g className="file2">
                <path d="M55.078 3.734A2.997 2.997 0 0 1 58.083.73h38.469c.83 0 1.966.476 2.555 1.082l13.92 14.327c.58.598 1.05 1.754 1.05 2.583v56.241a2.997 2.997 0 0 1-3.006 2.991H58.085a3.002 3.002 0 0 1-3.007-3.003V3.734z" fill="#FFF" />
                <path d="M56.578 3.734V74.95c0 .832.672 1.503 1.507 1.503h52.986c.836 0 1.507-.668 1.507-1.49V18.721c0-.438-.318-1.22-.627-1.538L98.03 2.857c-.303-.312-1.05-.627-1.48-.627H58.084c-.839 0-1.505.668-1.505 1.504zm-1.5 0A2.997 2.997 0 0 1 58.083.73h38.469c.83 0 1.966.476 2.555 1.082l13.92 14.327c.58.598 1.05 1.754 1.05 2.583v56.241a2.997 2.997 0 0 1-3.006 2.991H58.085a3.002 3.002 0 0 1-3.007-3.003V3.734z" fill="#F0F0EC" />
                <path d="M96.556 2.223v.006-.006zm-38.473.007c-.839 0-1.505.668-1.505 1.504V74.95c0 .832.672 1.503 1.507 1.503h52.986c.836 0 1.507-.668 1.507-1.49V18.721l-12.525-.001a3.502 3.502 0 0 1-3.497-3.506V2.23l-38.473.001zm-3.005 1.504A2.997 2.997 0 0 1 58.083.73h38.469c.83 0 1.504.667 1.504 1.493v12.992c0 1.108.896 2.006 1.997 2.006h12.517c.833 0 1.508.672 1.508 1.501v56.241a2.997 2.997 0 0 1-3.007 2.991H58.085a3.002 3.002 0 0 1-3.007-3.003V3.734z" fill="#F0F0EC" />
                <path d="M94.085 50.257h-17.68l8.84-14.248 8.84 14.248zm5.392 3L85.245 30.319 71.013 53.257h28.464z" fill="#80C772" />
              </g>
            </g>
          </svg>
        )
    }
  }

  isHover() {
    return this.props.isOver && this.state.status !== 'CONVERTING'
  }

  render() {
    const { connectDropTarget, isOver } = this.props
    return connectDropTarget(
      <div
        className={`container ${(this.state.status === 'IDLE') ?
         (this.isHover() ? 'border-hover' : 'border-dashed') : ''}`}
      >
        {this.getIconObject()}
        {this.getMessage()}
      </div>
    )
  }
}

// {!isOver && !canDrop && <div dangerouslySetInnerHTML={{ __html: octicons['file-pdf'].toSVG({ width: 100 }) }} />}
// {!isOver && canDrop && }
// {isOver && }

// { drop } since other functions can be passed here
export default DropTarget(NativeTypes.FILE, { drop }, (connect, monitor) => ({
  connectDropTarget: connect.dropTarget(),
  isOver: monitor.isOver(),
  canDrop: monitor.canDrop(),
  itemType: monitor.getItemType(),
  item: monitor.getItem()
}))(Sanitizer)
